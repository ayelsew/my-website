import Head from 'next/head'
import { FCT, FC, useState } from 'react'
import Image from 'next/image'

import * as S from "./styles"

import { Carousel } from '@/components/Carousel'
import HeaderProject from '@/components/HeaderProject'
import ExpandOnScreeen from '@/components/ExpandOnScreen'
import Paragraph from '@/components/Paragraph'
import TitleH2 from '@/components/TitleH2'
import { GetStaticPaths, GetStaticProps } from 'next'
import { getDictionary } from '@/utils/getDictionary'



const Project: FCT<{ id: string }> = ({ t, id }) => {
  const [expand, setExpand] = useState<boolean>(false)

  return (
    <>
      <Head>
        <title>{t.projects[Number(id)].title} - Leydev</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <S.SectionWrapper>
        <HeaderProject
          background={t.projects[Number(id)].cover}
          company={t.projects[Number(id)].client}
          title={t.projects[Number(id)].title}
          clientLogo={t.projects[Number(id)].icon}
          t={t}
        />
        <S.Content>

          <S.ColumnOne>
            <TitleH2>
              {t.project.technologies}
            </TitleH2>
            <S.ListTechnologies>
              {t.projects[Number(id)].technologies.map((item) => (
                <S.Technology key={item.icon}>
                  <S.TechnologyIcon src={item.icon} />
                  <S.TechnologyShortName>{item.name}</S.TechnologyShortName>
                  <Paragraph>
                    {item.description}
                  </Paragraph>
                </S.Technology>
              ))}
            </S.ListTechnologies>
          </S.ColumnOne>

          <S.ColumnTwo>
            <ExpandOnScreeen expand={expand} onClose={() => setExpand(false)}>
              <Carousel>
                <>
                  {t.projects[Number(id)].images.map((item) => (
                    <S.ImageCard key={item.src} $display={item.orientation} onClick={() => setExpand(true)}>
                      <Image src={item.src} alt="Tela de caixa" fill />
                    </S.ImageCard>
                  ))}
                </>
              </Carousel>
            </ExpandOnScreeen>
            <S.Snippet>
              <TitleH2>
              {t.project.about_project}
              </TitleH2>
              <Paragraph>
                    {t.projects[Number(id)].description}
              </Paragraph>
            </S.Snippet>
          </S.ColumnTwo>
        </S.Content>
      </S.SectionWrapper>
    </>
  )
}

export const getStaticProps: GetStaticProps = async ({ locale, params }) => {
  const t = await getDictionary();

  return {
    props: {
      t,
      id: Number(params?.id)
    }
  }
}

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [
      "/project/0"
    ],
    fallback: "blocking"
  }
}

export default Project;
