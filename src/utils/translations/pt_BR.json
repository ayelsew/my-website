{
  "menu": {
    "nav": [
      {
        "label": "Sobre mim",
        "href": "/#who-am-I"
      },
      {
        "label": "Habilidades",
        "href": "/#skills"
      },
      {
        "label": "Portfólio",
        "href": "/#portfolio"
      }
    ]
  },
  "who_am_I": {
    "head": {
      "title": "Leydev - Desenvolvedor",
      "description": "Welcome to Leydev systems development"
    },
    "my_name_is": "Olá, sou ",
    "about": "Sou desenvolvedor há mais de 6 anos, Já implementei soluções como programas, sites, webapps e IoT para diversos clientes, alguns deles sendo Netflix, Natura, Elo, Ticket, Ford Motor. Tenho habilidades com programação (Node/Javascript/Typescript, PHP, Rust), banco de dados SQL e NoSQL (MySQL, Postgres; Mongo, Rethink), sistemas operacionais Linux e Windows e redes de computadores (UDP e TCP/IP, DNS; Proxy, Firewall e outros servidores).",
    "my_experience": "Veja minhas experiências"
  },
  "skills": {
    "crossplatform": {
      "title": "Soluções multiplataforma",
      "description": "Elaboração de programas que podem ser executados nos três principais sistemas operacionais, sem a necessidade de reescrever o código para cada plataforma, usando o ecosistema de frameworks como Electron e Tauri."
    },
    "syncronism": {
      "title": "Sincronismo entre dispositivos",
      "description": "Desenvolvimento de APIs sobre HTTP, permitindo fácil integração com outros sistemas, usando Nginx, MySQL MongoBD e outros. Combinado com fatores para aumentar a segurança do armazenamento e tráfego dos dados como Firewall, SSL, Bcrypt e JWT."
    }
  },
  "portfolio": {
    "projects": {
      "title": "Projetos concluÍdos",
      "items": [
        {
          "title": "Ponto de Venda & estoque",
          "description": "Com este, o operador do caixa pode gerenciar produtos em estoque, registrar vendas, e fazer a pesagem em uma sorveteria self-service.",
          "background": "/images/asher_acaiteria.png",
          "client": "/images/vectors/asher_acaiteria.svg",
          "href_text": "Detalhes",
          "href": "/project/0"
        },
        {
          "title": "Irmandade (Out of Home IoT)",
          "description": "Com um sensor a laser, detectava quando uma pessoa entrava na frente e exibia um video simulando uma porta de prisão, para a série Irmandade.",
          "background": "/images/irmandade_out_of_home.png",
          "client": "/images/vectors/netflix.svg",
          "href_text": "Detalhes",
          "href": "/project"
        },
        {
          "title": "Agenda de visitas (PWA)",
          "description": "PWA usado para realizar agendamento de visitas pelos técnicos de uma empresa de marmoraria.",
          "background": "/images/magma.png",
          "client": "/images/vectors/magma.svg",
          "href_text": "Detalhes",
          "href": "/project"
        },
        {
          "title": "Natura todo dia (Out of Home IoT)",
          "description": "Máquina de distribuição de amostras grátis para promover o novo creme corporal da Natura",
          "background": "/images/natura-todo-dia.png",
          "client": "/images/vectors/natura.svg",
          "href_text": "Detalhes",
          "href": "/project"
        },
        {
          "title": "IP dinâmico DNS Cloudflare",
          "description": "Agendador para realizar a sincronização periódica de endereços IPs dinâmicos na Cloudflare",
          "background": "/images/ip_sync_cloudflare.png",
          "client": "/images/vectors/leydev.svg",
          "href_text": "Detalhes",
          "href": "/project"
        }
      ]
    },
    "open_souce": {
      "title": "Open source & experimentos",
      "description": "Atualmente em meu tempo livre, faço projetos experimentais e de código aberto, por puro aprendizado. E não há um nicho definido, pode ser front-end, back-end, redes.  Você pode me acompanhar no Github.",
      "href_repository": "https://github.com/ayelsew",
      "favorite_card": {
        "title": "Afinador Active Tuner",
        "description": "Esse é uma analizador de ondas sonoras, para auxiliar na afinação de instrumentos músicais de corda",
        "background": "/images/active_tuner.png",
        "href_app": "https://active-tuner.web.app/",
        "href_code": "https://github.com/leydev/Active-Tuner"
      }
    }
  },
  "project": {
    "technologies": "Tecnologias",
    "about_project": "Sobre o projeto"
  },
  "projects": [
    {
      "company": "leydev",
      "slug": "ponto-de-venda-e-estoque",
      "title": "Ponto de Venda & estoque",
      "client": "Asher Açaiteria",
      "icon": "/images/vectors/asher_acaiteria.svg",
      "short_description": "Com este programa, o operador do caixa pode gerenciar produtos em estoque, registrar vendas, e fazer a pesagem em uma sorveteria self-service.",
      "description": "A Asher Açaiteria, é uma sorveteria por quilo self-service, a qual realiza suas vendas por pesagem. A loja precisava de um programa, com integração com as balanças, gerenciamento de estoque com produtos unitários e pesáveis e emissões de relatórios dos lucros. <br> <br> Utilizei o Electron o qual provê um ecossistema com Nodejs e ter acesso ao protocolo RS-232 (porta serial), e permitir execução no computador do caixa independente de sistema operacional. Fiz uso de React para desenvolver o sistema, typescript no auxílio da programação, Material-UI na construção da interface do usuário. <br> <br> Para garantir a escalabilidade do uso do programa em caso de novas franquias da loja, o sistema conta com o armazenamento dos dados em servidores e comunicação por meio de API REST, a qual foi desenvolvida usando Nodejs e MariaDB. ",
      "cover": "/images/asher_acaiteria.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/screenshots/asher_acaiteria/0.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/asher_acaiteria/1.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/asher_acaiteria/2.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/asher_acaiteria/3.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/asher_acaiteria/4.png",
          "orientation": "horizontally"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React utiliza para construção do sistema"
        },
        {
          "icon": "/images/vectors/electron.svg",
          "name": "Electron",
          "description": "Electron como ecosistema para execução do programa em multiplataformas"
        },
        {
          "icon": "/images/vectors/gulp.svg",
          "name": "Gulp",
          "description": "Gulp para criar tarefas de transpilação e empacotamento"
        },
        {
          "icon": "/images/vectors/mariadb.svg",
          "name": "Maria DB",
          "description": "MariaDB como solução para armazenar os dados gerados pelo programa"
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Node JS",
          "description": "Nodejs para comunicação por porta serial com a balança"
        },
        {
          "icon": "/images/vectors/pm2.svg",
          "name": "PM2",
          "description": "PM2 para redundância e escalabilidade da API REST "
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "Typescript para auxiliar no desenvolvimento do código"
        },
        {
          "icon": "/images/vectors/webpack.svg",
          "name": "Webpack",
          "description": "Webpack para empacotamento das dependências e código fonte"
        }
      ]
    },
    {
      "company": "cuponeria",
      "slug": "white-label-ticket-vantagens",
      "title": "Marketplace Ticket Vantagens",
      "client": "Ticket",
      "icon": "/images/vectors/ticket.svg",
      "short_description": "Marketplace com promoções exclusivas para clientes Ticket",
      "description": "Marketplace o qual permite compra de produtos e/ou obtenção de cupons promocionais para os clientes da empresa TICKET SERVIÇOS S.A. Entendendo “white label” como uma template de layout com padrões pré estabelecidos, foi implementado toda a identidade visual a pedido da Ticket, em uma white label de estilo marketplace a qual é denominada Ticket Vantagens.<br><br>Todos os produtos exibidos neste marketplace são provenientes de integração com API REST da Cuponeria, a qual faz integração de sistema com sua parceira VIA S.A.<br><br>Na construção deste site foram utilizados: Nextjs para renderização do lado do servidor, garantindo SEO (Search Engine Optimization) e typescript para auxiliar no desenvolvimento do código.",
      "cover": "/images/ticket_vantagens.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/screenshots/ticket/0.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/ticket/1.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/ticket/2.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/ticket/3.png",
          "orientation": "horizontally"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React utiliza para construção do sistema"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "React é uma biblioteca JavaScript para criar interfaces de usuário."
        },
        {
          "icon": "/images/vectors/next.svg",
          "name": "Nextjs",
          "description": "Nextjs para renderização do lado do servidor com fins de SEO e Whitelabel"
        }
      ]
    },
    {
      "company": "cuponeria",
      "slug": "white-label-bitz-beneficios",
      "title": "Marketplace Lojão do Bitz",
      "client": "Bitz",
      "icon": "/images/vectors/bitz.svg",
      "short_description": "Marketplace com promoções exclusivas para clientes Bitz",
      "description": "Marketplace o qual permite compra de produtos e/ou obtenção de cupons promocionais para os clientes da empresa BITZ SERVIÇOS FINANCEIROS. Entendendo “white label” como uma template de layout com padrões pré estabelecidos, foi implementado toda a identidade visual a pedido do BITZ, em uma white label de estilo marketplace a qual é denominada Lojão do Bitz. <br><br> Todos os produtos exibidos neste marketplace são provenientes de integração com API REST da Cuponeria. <br><br> Na construção deste site foram utilizados: Nextjs para renderização do lado do servidor, garantindo SEO (Search Engine Optimization) e typescript para auxiliar no desenvolvimento do código.",
      "cover": "/images/bitz.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/screenshots/bitz/0.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/bitz/1.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/bitz/2.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/bitz/3.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/bitz/3.png",
          "orientation": "vertically"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React utiliza para construção do sistema"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "React é uma biblioteca JavaScript para criar interfaces de usuário."
        },
        {
          "icon": "/images/vectors/next.svg",
          "name": "Nextjs",
          "description": "Nextjs para renderização do lado do servidor com fins de SEO e Whitelabel"
        }
      ]
    },
    {
      "company": "cuponeria",
      "slug": "white-label-claro-pay",
      "title": "White Label Claro Pay",
      "client": "Claro",
      "icon": "/images/vectors/claro.svg",
      "short_description": "Página com promoções exclusivas para clientes Claro Pay",
      "description": "White label o qual permite obtenção de cupons promocionais para os clientes da empresa Claro Pay. Entendendo “white label” como uma template de layout com padrões pré estabelecidos, foi implementado toda a identidade visual a pedido do Claro. Essa página é aberta dentro de uma WebView no aplicativo da Claro. <br><br> Todos os produtos exibidos neste, são provenientes de integração com API REST da Cuponeria. <br><br> Na construção deste site foram utilizados: Nextjs e typescript para auxiliar no desenvolvimento do código.",
      "cover": "/images/claro_pay.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/screenshots/claro/0.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/claro/1.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/claro/2.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/claro/3.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/claro/3.png",
          "orientation": "vertically"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React utiliza para construção do sistema"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "React é uma biblioteca JavaScript para criar interfaces de usuário."
        },
        {
          "icon": "/images/vectors/next.svg",
          "name": "Nextjs",
          "description": "Nextjs para renderização do lado do servidor com fins de SEO e Whitelabel"
        }
      ]
    },
    {
      "company": "cuponeria",
      "slug": "white-label-elo",
      "title": "White Label Elo",
      "client": "Elo",
      "icon": "/images/vectors/elo.svg",
      "short_description": "Página com promoções exclusivas para clientes Elo",
      "description": "White label o qual permite obtenção de cupons promocionais para os clientes da empresa Elo. Entendendo “white label” como uma template de layout com padrões pré estabelecidos, foi implementado toda a identidade visual a pedido da Elo. <br><br> Todos os produtos exibidos neste, são provenientes de integração com API REST da Cuponeria. <br><br> Na construção deste site foram utilizados: Nextjs e typescript para auxiliar no desenvolvimento do código.",
      "cover": "/images/elo.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/elo.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/elo/0.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/elo/1.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/elo/2.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/elo/3.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/elo/4.png",
          "orientation": "horizontally"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React utiliza para construção do sistema"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "React é uma biblioteca JavaScript para criar interfaces de usuário."
        },
        {
          "icon": "/images/vectors/next.svg",
          "name": "Nextjs",
          "description": "Nextjs para renderização do lado do servidor com fins de SEO e Whitelabel"
        }
      ]
    },
    {
      "company": "primepass",
      "slug": "primepass-entretenimento",
      "title": "Website & aplicativo",
      "client": "Primepass",
      "icon": "/images/vectors/primepass.svg",
      "short_description": "A primepass oferece combos de pacotes de serviços de streaming e ingresso de cinema por assinatura",
      "description": "Site feito com Nextjs e app com React Native, onde os cliente podem acessar para verificar termos, serviços, sobre a empresa e ainda assinar planos mensais ou anuais além de poderem consultar seu próprio perfil. Como extra no aplicativo, os usuários podem fazer check-in de sua localização no cinema, para validar o direito ao ingresso.",
      "cover": "/images/primepass.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/primepass.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/primepass/0.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/primepass/1.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/primepass/2.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/primepass/3.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/primepass/4.png",
          "orientation": "horizontally"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React é uma biblioteca JavaScript para criar interfaces de usuário."
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Node JS",
          "description": "React é uma biblioteca JavaScript para criar interfaces de usuário."
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "React é uma biblioteca JavaScript para criar interfaces de usuário."
        }
      ]
    },
    {
      "company": "bizsys",
      "slug": "maquina-de-posters-the-witcher",
      "title": "Máquina de Posters The Witcher",
      "client": "Netflix",
      "icon": "/images/vectors/netflix.svg",
      "short_description": "Um quiz para promover a série The Witcher da Netflix. Caso os participantes respondessem corretamente às perguntas, a máquina entregava um pôster da série.",
      "description": "Um quiz para promover a série The Witcher da Netflix. Caso os participantes respondessem corretamente às perguntas, a máquina entregava um pôster da série. <br><br> A máquina foi construída usando Chromium em modo kiosk, React para compor a interface do usuário. Nodejs para fazer a interface “software/hardware” por meio do protocolo RS-232 (porta serial) e arduino.",
      "cover": "/images/the_witcher.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/the_witcher.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/the_witcher/0.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/the_witcher/1.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/the_witcher/2.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/the_witcher/3.jpeg",
          "orientation": "vertically"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React usado para compor a interface"
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Nodejs",
          "description": "NodeJs intermediario entre o react e o arduino"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "Typescript para auxiliar no desenvolvimento do código"
        },
        {
          "icon": "/images/vectors/arduino.svg",
          "name": "Arduino",
          "description": "Arduino para controle mecânimo"
        },
        {
          "icon": "/images/vectors/zabbix.svg",
          "name": "Zabbix",
          "description": "Zabbix para monitoramento"
        }
      ]
    },
    {
      "company": "bizsys",
      "slug": "maquina-de-amostras-natura-todo-dia",
      "title": "Máquina de Amostras Natura Todo Dia ",
      "client": "Natura",
      "icon": "/images/vectors/natura.svg",
      "short_description": "Máquina de amostragem para promover o novo creme corporal da Natura",
      "description": "Máquina de amostragem(<i>sampling machine</i>), para distribuição do novo creme corporal da Natura, chamado Natura Todo Dia <br><br> A máquina foi construída usando Chromium em modo kiosk, React para compor a interface do usuário. Nodejs para fazer a interface “software/hardware” por meio do protocolo RS-232 (porta serial) e arduino.",
      "cover": "/images/natura_todo_dia.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/natura_todo_dia.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/natura/0.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/natura/1.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/natura/2.jpeg",
          "orientation": "vertically"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React usado para compor a interface"
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Nodejs",
          "description": "NodeJs intermediario entre o react e o arduino"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "Typescript para auxiliar no desenvolvimento do código"
        },
        {
          "icon": "/images/vectors/arduino.svg",
          "name": "Arduino",
          "description": "Arduino para controle mecânimo"
        },
        {
          "icon": "/images/vectors/zabbix.svg",
          "name": "Zabbix",
          "description": "Zabbix para monitoramento"
        }
      ]
    },
    {
      "company": "bizsys",
      "slug": "out-of-home-porta-de-cela-irmandade",
      "title": "Out of Home para série Irmanadade",
      "client": "Netflix",
      "icon": "/images/vectors/netflix.svg",
      "short_description": "Mídia out of home para promover a série Irmandade da Netflix",
      "description": "Mídia <i>out of home</i> para promover a série Irmandade da Netflix. A porta temática possuía um sensor infravermelho para detectar a presença de uma pessoa à frente, e consequentemente reproduzir vídeos gravados como no modelo acima, em um monitor curvo para dar sensação de profundidade. Foram 7 mídias espalhadas pelo centro de São Paulo ao longo de uma semana. <br><br> A máquina foi construída usando VLC Player, Raspberry PI e Nodejs para interagir com sensor por intermédio de um Arduino.",
      "cover": "/images/irmandade_out_of_home.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "video",
          "src": [
            "/videos/netflix/irmandade/edson.webm",
            "/videos/netflix/irmandade/edson.mp4"
          ],
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/irmandade/0.jpg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/irmandade/1.jpg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/irmandade/2.jpeg",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/irmandade/3.jpg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/netflix/irmandade/4.jpeg",
          "orientation": "vertically"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React usado para compor a interface"
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Nodejs",
          "description": "NodeJs intermediario entre o react e o arduino"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "Typescript para auxiliar no desenvolvimento do código"
        },
        {
          "icon": "/images/vectors/arduino.svg",
          "name": "Arduino",
          "description": "Arduino para controle mecânimo"
        },
        {
          "icon": "/images/vectors/zabbix.svg",
          "name": "Zabbix",
          "description": "Zabbix para monitoramento"
        }
      ]
    },
    {
      "company": "bizsys",
      "slug": "karaoke-caneta-azul-mega-da-virada",
      "title": "Karaokê Mega da Virada, Caneta Azul",
      "client": "Caixa Econômica Federal",
      "icon": "/images/vectors/caixa_economica.svg",
      "short_description": "Máquina de karaokê para promover o evento Mega da Virada",
      "description": "Karaokê (<i>out of home</i>) para promover o evento Mega da Virada da Caixa Econômica Federal. Os participantes cantavam e ganhavam literalmente uma caneta azul como parte da abordagem publicitária envolvendo a parceria do cantor Manoel Gomes. <br><br> A máquina foi construída usando Chromium em modo kiosk, React para compor a interface do usuário. Nodejs para fazer a interface “software/hardware” por meio do protocolo RS-232 (porta serial) e arduino.",
      "cover": "/images/caneta_azul.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/caneta_azul.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/caixa_economica_federal/0.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/caixa_economica_federal/1.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/caixa_economica_federal/2.jpeg",
          "orientation": "vertically"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React usado para compor a interface"
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Nodejs",
          "description": "NodeJs intermediario entre o react e o arduino"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "Typescript para auxiliar no desenvolvimento do código"
        },
        {
          "icon": "/images/vectors/arduino.svg",
          "name": "Arduino",
          "description": "Arduino para controle mecânimo"
        },
        {
          "icon": "/images/vectors/zabbix.svg",
          "name": "Zabbix",
          "description": "Zabbix para monitoramento"
        }
      ]
    },
    {
      "company": "leydev",
      "slug": "afinador-active-tuner",
      "title": "Afinador Active Tuner",
      "client": "Open Source",
      "icon": "/images/vectors/leydev.svg",
      "short_description": "Esse é uma analizador de ondas sonoras, para auxiliar na afinação de instrumentos músicais de corda",
      "description": "Analisador de frequ\u00EAncias sonoras, para aux\u00EDlio na afina\u00E7\u00E3o de instrumentos musicais. Ele detecta frequ\u00EAncias entre C\u2080 (16,35 Hertz) e B\u2088 (7902,13 Hertz), e exibe a nota referente a frequ\u00EAncia captada. <br> <br> O Active Tuner tem como objetivo o aprendizado do funcionamento de ondas sonoras e sua representa\u00E7\u00E3o digital. Foi necess\u00E1rio a compreens\u00E3o b\u00E1sica de algoritmos para a convers\u00E3o do sinal anal\u00F3gico para digital. O aprendizado do funcionamento da API de \u00E1udio utilizado pelos browsers, ex. Chrome e Firefox. E a constru\u00E7\u00E3o de uma aplica\u00E7\u00E3o Web que pudesse representar a frequ\u00EAncia e sua nota referente no momento da capta\u00E7\u00E3o. <br> <br> Foram utilizados a API de Web \u00E1udio para processamento das frequ\u00EAncias sonoras, algoritmo de detec\u00E7\u00E3o de tom (<i><abbr title=\"Pitch detection algorithm\">PDA<\/abbr> - Pitch detection algorithm<\/i>), API Canvas para desenhos de gr\u00E1fico, React para composi\u00E7\u00E3o da interface do usu\u00E1rio e typescript\/javascript para programa\u00E7\u00E3o. <br> <br> Outros autores: <br> <br> <a href=\"https:\/\/www.linkedin.com\/in\/renanlopes77\/\" rel=\"nofollow\" target=\u201D_blank\u201D>Renan Lopes<\/a> atou na pesquisa e desenvolvimento deste projeto, <a href=\"https:\/\/github.com\/freirezinho\" target=\u201D_blank\u201D>Saulo Freire<\/a> atou na corre\u00E7\u00E3o de bugs no navegador Safari para Mac e iPhone e <a href=\"https:\/\/www.behance.net\/luizgusiqueir\" rel=\"nofollow\" target=\u201D_blank\u201D>Luiz Gustavo<\/a> designer respons\u00E1vel pelas artes e interface do aplicativo.",
      "cover": "/images/active_tuner.png",
      "href_text": "Detalhes",
      "actions": [
        {"href": "https://active-tuner.web.app/", "label": "Abrir app", "icon": "external"},
        {"href": "https://github.com/leydev/Active-Tuner", "label": "Código fonte", "icon": "code"}
      ],
      "images": [
        {
          "type": "video",
          "src": [
            "/videos/active_tuner/tuner.webm",
            "/videos/active_tuner/tuner.mp4"
          ],
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "https://mir-s3-cdn-cf.behance.net/project_modules/2800_opt_1/149ab7136971703.6205e51286488.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "https://mir-s3-cdn-cf.behance.net/project_modules/fs/d01d94136971703.6205e5128568f.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "https://mir-s3-cdn-cf.behance.net/project_modules/fs/af22ec136971703.6205e51285d84.png",
          "orientation": "horizontally"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/react.svg",
          "name": "React",
          "description": "React usado para criar a interface de usuário."
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Nodejs",
          "description": "Nodejs para desenvolvimento é build"
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "TypeScript para auxilio na programação com Javascript"
        },
        {
          "icon": "/images/vectors/webpack.svg",
          "name": "Webpack",
          "description": "Webpack usado para transpilação, minificação e empacotamento do código"
        },
        {
          "icon": "/images/vectors/html5.svg",
          "name": "HTML 5 APIs",
          "description": "HTML5 para uso das APIs Web Áudio, Canvas e Service Worker"
        },
        {
          "icon": "/images/vectors/firebase.svg",
          "name": "Firebase",
          "description": "Firebase para hospedagem em produção"
        },
        {
          "icon": "/images/vectors/github.svg",
          "name": "CI/CD",
          "description": "Github com serviço de entrega continua integrado à hospedagem no Firebase"
        },
        {
          "icon": "/images/vectors/pwa.svg",
          "name": "PWA",
          "description": "PWA - Progressive Web App"
        }
      ]
    },
    {
      "company": "leydev",
      "slug": "ddns-cloudflare",
      "title": "DNS Dinâmico Cloudflare",
      "client": "Open Source",
      "icon": "/images/vectors/leydev.svg",
      "short_description": "Agendador para realizar a sincronização periódica de endereços IPs de servidores sem endereçamento estático na Cloudflare",
      "description": "Dynamic DNS Cloudflare é um serviço que roda em segundo plano no sistema operacional e periodicamente se comunica com o serviço de DNS da Cloudflare para atualizar a referência do <i><abbr title=\"internet Protocol\">IP</abbr></i> com o domínio. <br> <br> Esse programa é útil quando se precisa fazer servidores caseiros ou não, seja para jogar Minecraft e CS 1.6 com os amigos, configurar <i><abbr title=\"Virtual Private Network\">VPN</abbr></i>, <i><abbr title=\"Digital Video Recorder\">DVR</abbr></i> para câmeras de segurança, dentre outros serviços. Porém a internet disponível só tem endereçamento IP dinâmico. <br> <br> Para evitar a queda do servidor na internet nesse tipo de situação e não ter de pagar caro por um IP estático, é necessário a implementação de um Sistema de Nomes de Domínio Dinâmico (<i><abbr title=\"Dynamic Domain Name System\">DDNS</abbr></i>). Você pode mover o controle do seu domínio para o serviço de DNS da Cloudflare e instalar esse programa para ficar atualizando o DNS com o atual IP do servidor. <br> <br> <b>OBS</b>: Apesar de eu ter disponibilizado para download só a versão Linux, você mesmo pode baixar o projeto e modificar para ter uma versão Windows ou para qualquer outro sistema. <br> <br> O programa é feito com Nodejs e empacotado independente. Você pode criar um shell script que, durante a instalação do programa, vai configurar o mesmo para rodar em background toda vez que o sistema for iniciado.",
      "cover": "/images/ip_sync_cloudflare.png",
      "href_text": "Detalhes",
      "actions": [
        {"href": "https://raw.githubusercontent.com/ayelsew/ddns-cloudflare/main/setup-linux.sh", "label": "For Linux", "icon": "download"},
        {"href": "https://github.com/ayelsew/ddns-cloudflare", "label": "Código fonte", "icon": "code"}
      ],
      "images": [
        {
          "type": "image",
          "src": "/images/ip_sync_cloudflare.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/ip_sync_cloudflare/1.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/ip_sync_cloudflare/2.png",
          "orientation": "horizontally"
        },
        {
          "type": "video",
          "src": [
            "/videos/ip_sync_cloudflare/ip_sync.webm",
            "/videos/ip_sync_cloudflare/ip_sync.mp4"
          ],
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/ip_sync_cloudflare/0.png",
          "orientation": "horizontally"
        }

      ],
      "technologies": [
        {
          "icon": "/images/vectors/shellscript.svg",
          "name": "Shell Script",
          "description": "Shell Script para automatizar a instalação do programa no Systemd do Linux"
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Node.js",
          "description": "Node.js é um ambiente de execução JavaScript multiplataforma e de código aberto."
        },
        {
          "icon": "/images/vectors/typescript.svg",
          "name": "TypeScript",
          "description": "TypeScript implementa sintaxe para suportar inferência de tipos em JS."
        }
      ]
    },
    {
      "company": "leydev",
      "slug": "agenda-de-visita-magma",
      "title": "Aplicativo para agendamento de visitas técnica",
      "client": "Magma",
      "icon": "/images/vectors/magma.svg",
      "short_description": "PWA usado para realizar agendamento de visitas pelos técnicos da Magma, empresa de marmoraria.",
      "description": "Aplicativo Web Progressivo (<i><abbr title=\"Progressive Web App\">PWA</abbr></i>), para empresa de mármore Magma, Os técnicos dessa empresa podem ao longo da jornada de trabalho verificar quais clientes eles precisam visitar e realizar agendamentos. <br><br> O aplicativo foi feito utilizando componentes de interface do Bootstrap, Javascript em sua programação, e a API Service Worker para permitir sua execução offline, além de permitir uma experiência próxima de um aplicativo nativo para Android. O mesmo também foi integrado a uma API REST, onde os dados de agendamento são centralizado permitindo login e gerenciamento das informações pela empresa",
      "cover": "/images/magma.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/magma.png",
          "orientation": "horizontally"
        },
        {
          "type": "image",
          "src": "/images/screenshots/magma/0.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/magma/1.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/magma/2.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/magma/3.png",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/magma/4.png",
          "orientation": "vertically"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/javascript.svg",
          "name": "Javascript",
          "description": "Javascript para programação do app"
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Nodejs",
          "description": "Nodejs para desenvolvimento e build"
        },
        {
          "icon": "/images/vectors/gulp.svg",
          "name": "Gulp",
          "description": "Gulp usado para minificação e empacotamento do código"
        },
        {
          "icon": "/images/vectors/pwa.svg",
          "name": "PWA",
          "description": "PWA - Progressive Web App"
        }
      ]
    },
    {
      "company": "leydev",
      "slug": "jogo-da-velha",
      "title": "App Jogo Da Velha (PvP Online)",
      "client": "Open Source",
      "icon": "/images/vectors/leydev.svg",
      "short_description": "O clássico jogo da velha em PWA, você pode jogar: contra as máquina ou mutiplayer com deus amigos",
      "description": "Um dos meus primeiros projetos experimentais (<i><abbr title=\"Progressive Web App\">PWA</abbr></i>), clássico jogo da velha. Meu objetivo aqui foi entender como funcionava o protocolo WebSocket, para comunicação bidirecional (<i>full duplex</i>). <br><br> Os modelos de comunicação entre 2 ou mais dispositivos normalmente exige a reconexão com o servidor todas as vezes para consultar novas informações. Isso em aplicações escaláveis causa um aumento de tráfego, processamento e sobrecarrega no servidor, além de atraso na obtenção de informações críticas, pois o protocolo TCP exige que o processo <i>Three-way Handshake</i> seja realizado a cada nova conexão. Fora as demais validações que deverão ocorrer por outros protocolos acima do TCP de acordo com o modelo do Sistemas Abertos de Interconexão <i><abbr title=\"Open Systems Interconnection\">OSI</abbr></i>. <br><br> Com o protocolo WebSocket é possível conectar diversos dispositivos ao servidor, e solicitar que a mesma conexão se mantenha aberta até que 1 dos correspondentes não responda em tempo hábil as requisições de status (ping), obstrução a nível físico da rede ou encerramento da comunicação por um dos correspondentes. Com a conexão aberta e permitindo troca de mensagens bidirecionais, a comunicação passa a ser orientada a eventos, permitindo que qualquer um dos correspondentes (cliente ou servidor) enviem mensagem entre si a qualquer momento <br><br> O aplicativo foi feito utilizando componentes de interface do Bootstrap, Javascript em sua programação, e a API nativa WebSocket. <br><br> Do lado do servidor foi utilizado o módulo <a href=\"https://www.npmjs.com/package/ws\">ws</a>, que ajuda na implementação do protocolo WebSocket sobre o HTTP e TCP em ambiente Nodejs, pois até o presente momento, esse ambiente não tem o protocolo nativamente implementado",
      "cover": "/images/hash_game.png",
      "href_text": "Detalhes",
      "images": [
        {
          "type": "image",
          "src": "/images/screenshots/hash_game/0.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/hash_game/1.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/hash_game/2.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/hash_game/3.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/hash_game/4.jpeg",
          "orientation": "vertically"
        },
        {
          "type": "image",
          "src": "/images/screenshots/hash_game/5.jpeg",
          "orientation": "vertically"
        }
      ],
      "technologies": [
        {
          "icon": "/images/vectors/javascript.svg",
          "name": "Javascript",
          "description": "Javascript para programação do app"
        },
        {
          "icon": "/images/vectors/pwa.svg",
          "name": "PWA",
          "description": "PWA - Progressive Web App"
        },
        {
          "icon": "/images/vectors/html5.svg",
          "name": "HTML5",
          "description": "HTML5 para uso da API Websocket"
        },
        {
          "icon": "/images/vectors/nodejs.svg",
          "name": "Nodejs",
          "description": "Nodejs para desenvolvimento do servidor"
        }
      ]
    }
  ],
  "companies": [
    {
      "slug": "cuponeria",
      "icon": "/images/vectors/cuponeria.svg",
      "name": "Innoventures Ideias em Soluções S.A (Cuponeria)",
      "role": "Desenvolvedor Front End",
      "period": {
        "start": "Fev 2022",
        "end": "Fev 2023"
      },
      "about_experience": "Atuei como desenvolvedor no principal projeto da Cuponeria, White Label. Realizava  integração com APIs REST, manutenção, aperfeiçoamento, e codificação de componentes de UI e layouts para clientes como, Banco Bari, Sofisa, Ticket, Bitz, Claro Pay e dentre outros. Os quais oferecem descontos por meio de cupons e Cashback. Trabalhei também na migração da base do código legado, usando tecnologias como React, Next.js, Typescript, Nodejs, Jest e StoryBook."
    },
    {
      "slug": "primepass",
      "icon": "/images/vectors/primepass.svg",
      "name": "Primepass Entretenimento Interativo Ltda",
      "role": "Desenvolvedor Front End",
      "period": {
        "start": "Out 2020",
        "end": "Jan 2022"
      },
      "about_experience": "Atuei como desenvolvedor no website (Vuejs) e aplicativo (React Native). Realizava a integração de novas funcionalidades com API REST e Graph QL, correção de bugs na interface do usuário, integração com Firebase para login com Apple ID, Conta Google e login com parceiros (ISPs), os quais oferecem pacotes de entretenimento da Primepass dando acesso a ingressos de cinemas, e plataformas de streaming como HBO Max."
    },
    {
      "slug": "bizsys",
      "icon": "/images/vectors/bizsys.svg",
      "name": "Biz & Sys Consultoria de negócios e tecnologia de informação LTDA",
      "role": "Desenvolvedor Full Stack",
      "period": {
        "start": "Jul 2019",
        "end": "Jun 2020"
      },
      "about_experience": "Atuei como desenvolvedor em projetos publicitários (Mídia Out of Home), tendo como diferencial a implementação da tecnologia conceitual a IoT, tornando-os interativos, para clientes como Netflix, Natura, Caixa Econômica Federal, Ford, Unilever dentre outros. Realizava análises técnicas e propunha soluções usando Servidores Linux, Nodejs, React, Vue, Raspberry dentre outras. Além do desenvolvimento, fui responsável por monitoria e suporte tanto em campo quanto remoto dos projetos em período de campanha."
    },
    {
      "slug": "leydev",
      "icon": "/images/vectors/leydev.svg",
      "name": "Leydev",
      "role": "Desenvolvedor Full Stack",
      "period": {
        "start": "Jul 2019",
        "end": "o momento"
      },
      "about_experience": "Como Leydev, já atuei sendo freelancer, desenvolvendo soluções para problemas simples como apontamentos de DNS, implementação de CDN dentre outros relacionados a infraestrutura e aplicações, até desenvolvimento de um sistema completo com API REST, banco de dados e integração com balanças de caixa de loja. Adquirir experiências gerenciando uma pequena equipe, projeto e lidando diretamente com clientes. Atualmente em meu tempo livre faço apenas projetos pessoais com fins experimentais, estudatil e open-source."
    },
    {
      "slug": "sonda",
      "icon": "/images/vectors/sonda.svg",
      "name": "Sonda",
      "role": "Técnico de suporte nível 1",
      "period": {
        "start": "Nov 2018",
        "end": "Mar 2019"
      },
      "about_experience": "Atuei como técnico de suporte nível 1, atendendo aos colaboradores da instituição de pagamento Cielo. Auxiliando usuários remotamente em suas demandas como conexão de VPNs, acesso a sistemas, configuração de celulares corporativos. E quando necessário realizava a abertura e acompanhamentos de chamados, quando direcionados a outras equipes competentes como nível 2 e segurança da informação."
    }
  ]
}